import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components';

const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: '',
  });
  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);

  const generateImage = async () => {};
  const handleSubmit = async (e) => {
    e.preventDefault();
  };

  return (
    <section className="max-w-5xl mx-auto flex flex-col items-center px-5 py-10">
      {/* Header Section */}
      <div className="text-center sm:text-left w-full">
        <h1 className="text-4xl font-extrabold text-[#6469ff]">
          Create Your Image
        </h1>
        <p className="mt-3 text-gray-600 text-base sm:text-lg max-w-2xl">
          Create imaginative and visually stunning images generated by AI and
          share them with the community.
        </p>
      </div>

      {/* Form Section */}
      <div className="mt-12 w-full bg-white/80 shadow-lg rounded-2xl p-6 sm:p-10 border border-gray-200 backdrop-blur-md">
        <form className="flex flex-col gap-6" onSubmit={handleSubmit}>
          <FormField
            labelName="Your Name"
            type="text"
            name="name"
            placeholder="Ex., John Doe"
            value={form.name}
            handleChange={() => {}}
          />

          <FormField
            labelName="Prompt"
            type="text"
            name="prompt"
            placeholder="An Impressionist oil painting of sunflowers in a purple vase…"
            value={form.prompt}
            handleChange={(e) => {setForm({ ...form, [e.target.name]: e.target.value });}}
            isSurpriseMe
            handleSurpriseMe={() => {
              const randomPrompt = getRandomPrompt(form.prompt);
              setForm({ ...form, prompt: randomPrompt });
            }}
          />

          {/* Image Preview Box — smaller now */}
          <div className="relative flex justify-center items-center w-full border-2 border-dashed border-gray-300 rounded-xl bg-gray-50 overflow-hidden min-h-[200px] sm:min-h-[220px]">
            {form.photo ? (
              <img
                src={form.photo}
                alt={form.prompt}
                className="w-3/4 h-3/4 object-contain rounded-lg"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-2/4 sm:w-1/3 object-contain opacity-50"
              />
            )}

            {generatingImg && (
              <div className="absolute inset-0 flex justify-center items-center bg-black/50 rounded-xl">
                <Loader />
              </div>
            )}
          </div>

          {/* Buttons Section */}
          <div className="flex flex-col sm:flex-row gap-4 mt-5">
            <button
              type="button"
              onClick={generateImage}
              className="text-white bg-green-600 hover:bg-green-700 active:bg-green-800 font-medium rounded-lg text-sm px-6 py-3 w-full sm:w-auto transition-all duration-200 shadow-md"
            >
              {generatingImg ? 'Generating...' : 'Generate'}
            </button>

            <button
              type="button"
              onClick={() => {}}
              className="text-white bg-[#6469ff] hover:bg-[#5558e0] active:bg-[#4546c0] font-medium rounded-lg text-sm px-6 py-3 w-full sm:w-auto transition-all duration-200 shadow-md"
            >
              {loading ? 'Sharing...' : 'Share with the Community'}
            </button>
          </div>
        </form>

        {/* Info Text */}
        <p className="mt-6 text-center sm:text-left text-sm text-gray-500">
          Once you’ve created an image you love, share it with others in the
          community!
        </p>
      </div>
    </section>
  );
};

export default CreatePost;
